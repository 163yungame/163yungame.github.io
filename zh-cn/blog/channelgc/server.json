{
  "filename": "server.md",
  "__html": "<h1>云游戏渠道应用接入文档</h1>\n<h2>文档版本更新记录</h2>\n<table>\n<thead>\n<tr>\n<th>编号</th>\n<th>修改描述</th>\n<th>修订日期</th>\n<th>版本号</th>\n<th>修订人</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>创建文档</td>\n<td>20180427</td>\n<td>1.0</td>\n<td>胡世长</td>\n</tr>\n<tr>\n<td>2</td>\n<td>修改文档，加入自动同步注册和红点同步及游戏中心的免登</td>\n<td>20180522</td>\n<td>1.1</td>\n<td>胡世长</td>\n</tr>\n<tr>\n<td>3</td>\n<td>修改文档，同步bima-oauth2的所有接口</td>\n<td>20181011</td>\n<td>1.2</td>\n<td>何慧</td>\n</tr>\n</tbody>\n</table>\n<h2>渠道应用授权登陆流程及接入注意事项</h2>\n<h3>下载</h3>\n<p><a href=\"http://nosdn-yx.127.net/yxgame/8a49e813671570e601671588cd5f0002.zip\">Demo</a></p>\n<h3>授权流程图</h3>\n<p><img src=\"http://nosdn-yx.127.net/yxgame/417bf23c05f64116b0ed079e2a616ddc.png\" alt=\"授权流程图\"></p>\n<h3>角色说明</h3>\n<ul>\n<li>\n<p><code>GAME</code>:接入云游戏的游戏方(例如第五人格)</p>\n</li>\n<li>\n<p><code>WebView</code>: 接入渠道方的游戏中心Webview</p>\n<p><code>GAME</code>与<code>Webview</code>都属于游戏中心的子应用</p>\n</li>\n<li>\n<p><code>App</code>:接入云游戏的渠道方的App</p>\n</li>\n<li>\n<p><code>AppServer</code>:接入云游戏的渠道方的Server</p>\n</li>\n<li>\n<p><code>GameCenterServer</code>:云游戏的服务端</p>\n</li>\n</ul>\n<h3>oauth流程中的术语说明</h3>\n<ul>\n<li><code>appid</code>:接入授权的一个企业或者接入方</li>\n<li><code>appSecret</code>:接入授权的接入方获取的appId对应的secret</li>\n<li><code>clientId</code>:接入方在<code>appId</code>下生成的子应用</li>\n<li><code>clientSecret</code>:接入方在<code>appId</code>下生成的子应用的secret</li>\n<li><code>openId</code>:接入方在<code>appId</code>下的用户标识，关于<code>appId</code>唯一</li>\n<li><code>code</code>:oauth第一步需要先获取一个过期时间较短的临时授权码，如微信是5分钟</li>\n<li><code>accessToken</code>:oauth授权成功后拿到的用来鉴权的token信息，关于<code>clientId</code>和系统的<code>userId</code>唯一</li>\n</ul>\n<h3>接入重要注意事项</h3>\n<ol>\n<li>接入并开启渠道授权后，需要第一时间联系运营在后台进行配置以下内容\n<ul>\n<li><code>oauthAppId</code>和<code>oauthAppSecret</code>:渠道方分配给云游戏进行Oauth接入分配的<code>appId</code>和<code>secret</code>, 后续所有给云游戏分配的<code>clientId</code>都需要在这个<code>appId</code>的维度下，即同一用户使用同一个<code>appId</code>下不同的<code>clientId</code>授权，获取的<code>openId</code>是相同的。注意**<font color=red>这很关键</font>**，否则不同游戏映射出来的账号是不同的</li>\n<li><code>webClientId</code>和<code>webClientSecret</code>:渠道方在上方<code>oauthAppId</code>下给云游戏中心webview分配的<code>clientId</code>，在渠道的App内也会用到，渠道App进入游戏中心的时候需要获取code并作为参数附到链接后，后文会提到。</li>\n<li>提供的自动注册<code>ClientId</code>的接口，需要保证在前面的<code>oauthAppId</code>维度下进行。</li>\n<li>授权流程中的<code>code</code>换完一次<code>accessToken</code>后需要失效</li>\n<li>生成<code>accessToken</code>时，需要同时关联<code>clientId</code>与<code>userId</code>两个维度，即同一个用户在不同的<code>clientId</code>下获取到的<code>accessToken</code>是不同，并可以同时存在和使用，互不影响</li>\n<li>按照后文的各个必须的服务端接口，到后台配置接口url</li>\n</ul>\n</li>\n</ol>\n<h2>服务端接口说明</h2>\n<p><strong><font color=red>必须严格按照接口定义实现并将URL配置到后台</font></strong></p>\n<h3>通用请求参数及签名</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">appid</td>\n<td style=\"text-align:left\">接入应用id</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">timestamp</td>\n<td style=\"text-align:left\">unix时间戳(ms)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sign</td>\n<td style=\"text-align:left\">签名</td>\n</tr>\n</tbody>\n</table>\n<h4>签名算法</h4>\n<ol>\n<li>将url路径中的参数对，以参数名按字母序排列(不包含sign参数本身)</li>\n<li>排好的顺序基础上，将对应的参数值进行拼接(没有拼接符)</li>\n<li>将签名密钥（从后台拿到的GameCenterServer生成的私钥appSecret)加在拼接好的字符串头部</li>\n<li>对字符串进行sha1签名</li>\n<li>将sign参数加到url</li>\n</ol>\n<h5>示例</h5>\n<pre><code>appsecret=key\nappid=av\ntimestamp=1512970730186\np1=b1\np2=a2\n\nCheckSum=sha1hex(keyavb1a21512970730186)=9040814fffef8b6367c71ff1748d4af56437308e \n</code></pre>\n<ul>\n<li>有特别说明不需要携带签名的API,按接口说明要求调用即可。</li>\n<li>没有特别说明不需要签名校验的均需要携带以下参数\n<ul>\n<li>appid</li>\n<li>timestamp</li>\n<li>sign</li>\n</ul>\n</li>\n</ul>\n<h3>1、GameCenterServer自动向AppServer注册Game</h3>\n<p><code>/api/v1/oauth2/app/client/add</code></p>\n<ul>\n<li>提供方:AppServer</li>\n<li>调用方:GameCenterServer</li>\n<li>请求方式:<code>POST</code></li>\n<li>header:<code>content-type:application/json</code></li>\n<li>请求参数格式:<code>json</code></li>\n<li>返回数据格式:<code>json</code></li>\n<li>此接口不需要签名</li>\n</ul>\n<h4>请求参数说明</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>appId</td>\n<td>分配的oauthAppId,所有云游戏ClientId及webClientid属于这个oauthAppId</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>appSecret</td>\n<td>分配oauthAppSecret</td>\n<td>String</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h4>请求示例</h4>\n<pre><code>{\n    &quot;appId&quot;:&quot;defte234213434354534&quot;,\n    &quot;appSecret&quot;:&quot;12335435646546fdgser&quot;\n}\n</code></pre>\n<h4>返回数据说明</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>返回码，成功code是200，失败是除成功200以外的值</td>\n<td>int</td>\n<td>是</td>\n</tr>\n<tr>\n<td>msg</td>\n<td>提示信息，成功是ok，失败是具体的错误提示</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>result</td>\n<td>返回数据，正确的情况下包括clientId和clientSecret字段</td>\n<td>Object</td>\n<td>是</td>\n</tr>\n<tr>\n<td>clientId</td>\n<td>oauth分配的clientId</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>clientSecret</td>\n<td>oauth分配的clientSecret</td>\n<td>String</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h4>返回示例</h4>\n<pre><code>{\n    &quot;code&quot;:&quot;200&quot;,\n    &quot;msg&quot;:&quot;ok&quot;,\n    &quot;result&quot;:{\n    \t&quot;clientId&quot;:&quot;123dsfweari2u34298fjedeiwj&quot;,\n\t  &quot;clientSecret&quot;:&quot;defefikjsdknv9e2934jife==&quot;\n    }\n}\n</code></pre>\n<h3>2、GameCenterServer同步红点给AppServer</h3>\n<p><code>/api/v1/open/redDot/config</code></p>\n<ul>\n<li>提供方:AppServer</li>\n<li>调用方:GameCenterServer</li>\n<li>请求方式:<code>POST</code></li>\n<li>header:<code>content-type:application/json</code></li>\n<li>请求参数格式:<code>json</code></li>\n<li>返回数据格式:<code>json</code></li>\n</ul>\n<h4>请求路径参数</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>appid</td>\n<td>应用id</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>时间戳</td>\n<td>Long</td>\n<td>是</td>\n</tr>\n<tr>\n<td>sign</td>\n<td>签名，签名校验方式见签名算法</td>\n<td>String</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h4>请求参数说明</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>redDotSwitch</td>\n<td>红点开关，true表示开启不开启就就不显示红点数据</td>\n<td>boolean</td>\n<td>是</td>\n</tr>\n<tr>\n<td>os</td>\n<td>操作系统，android和ios</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>context</td>\n<td>红点文案</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>红点图片</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>effectiveTime</td>\n<td>有效开始时间</td>\n<td>Long</td>\n<td>是</td>\n</tr>\n<tr>\n<td>expirationTime</td>\n<td>有效结束时间</td>\n<td>Long</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h4>请求示例</h4>\n<pre><code>https://xxxxxxx/api/v1/oauth2/user/info?appid=APPID&amp;timestamp=TIMESTAMP\n</code></pre>\n<pre><code>{\n    &quot;redDotSwitch&quot;:true,\n    &quot;os&quot;:&quot;ios&quot;,\n    &quot;context&quot;:&quot;有一个新游戏&quot;,\n    &quot;icon&quot;:&quot;http://一个图片.png&quot;,\n    &quot;effectiveTime&quot;:1538211191233,\n    &quot;expirationTime&quot;:1538211191233\n}\n</code></pre>\n<h4>返回数据说明</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>返回码，成功code是200，失败是除成功200以外的值</td>\n<td>int</td>\n<td>是</td>\n</tr>\n<tr>\n<td>msg</td>\n<td>提示信息，成功是ok，失败是具体的错误提示</td>\n<td>String</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h4>请求示例</h4>\n<pre><code>{\n    &quot;code&quot;:&quot;200&quot;,\n    &quot;msg&quot;:&quot;ok&quot;\n}\n</code></pre>\n<h3>3、请求code</h3>\n<p><code>/api/v1/oauth2/code</code></p>\n<p>游戏中心WebView/Game 使用AppServer发放的appid请求对应的临时code.</p>\n<ul>\n<li>提供方:AppServer</li>\n<li>调用方:App客户端应用</li>\n<li>请求方式:<code>GET</code></li>\n<li>返回数据格式:<code>json</code></li>\n</ul>\n<p>注意，如果是 Web 应用对应的 redirect_uri 有对应的域名限制（需要实现），必须跳转到后台登记的域名下的 url 地址。</p>\n<h4>参数说明</h4>\n<h5>Url参数</h5>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>appid</td>\n<td>biamServer应用id</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>时间戳</td>\n<td>Long</td>\n<td>是</td>\n</tr>\n<tr>\n<td>sign</td>\n<td>签名，签名校验方式见签名算法</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>userId</td>\n<td>用户id</td>\n<td>String</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h5>Body请求\b参数</h5>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>appid</td>\n<td>第三方应用id</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>clientId</td>\n<td>子应用唯一标识，在开放平台提交子应用审核通过后获得</td>\n<td>String</td>\n<td>如果不存在子应用，则不需要</td>\n</tr>\n<tr>\n<td>userId</td>\n<td>用户id</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>redirect_uri</td>\n<td>请使用urlEncode对链接进行处理</td>\n<td>String</td>\n<td>否</td>\n</tr>\n<tr>\n<td>state</td>\n<td>用于保持请求和回调的状态，授权请求后原样带回给第三方。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数session进行校验</td>\n<td>String</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h4>请求示例</h4>\n<pre><code>curl -XPOST -H &quot;Content-Type:application/json&quot; 'xxx.xxx.com/api/v1/oauth2/code?appid=APP_ID&amp;sign=SIGN&amp;timestamp=TIME_STAMP&amp;userId=USER_ID' -d '\n { \n  &quot;userId&quot;: &quot;USER_ID&quot;,\n  &quot;appId&quot;:&quot;APP_ID&quot;,\n  &quot;clientId&quot;:&quot;CLIENT_ID&quot;\n}'\n</code></pre>\n<h4>返回说明</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>返回码，成功code是200，失败是除成功200以外的值</td>\n<td>int</td>\n<td>是</td>\n</tr>\n<tr>\n<td>msg</td>\n<td>提示信息，成功是ok，失败是具体的错误提示</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>result</td>\n<td>返回数据，正确的情况下包括clientId和clientSecret字段</td>\n<td>Object</td>\n<td>是</td>\n</tr>\n<tr>\n<td>openId</td>\n<td>oauth分配的openId</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>code</td>\n<td>oauth分配的授权码</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>expireInMs</td>\n<td>code的过期时间,ms</td>\n<td>long</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h4>返回示例</h4>\n<pre><code>{\n  &quot;code&quot;: 10000,\n  &quot;msg&quot;: &quot;ok&quot;,\n  &quot;result&quot;: {\n    &quot;openId&quot;: &quot;65806&quot;,\n    &quot;code&quot;: &quot;PfmXFUu1Ug&quot;,\n    &quot;expireInMs&quot;: 59312\n  }\n}\n</code></pre>\n<h3>4、Code换取Token</h3>\n<p><code>/api/v1/oauth2/access_token</code></p>\n<ul>\n<li>提供方:AppServer</li>\n<li>调用方:GameCenterServer</li>\n<li>请求方式:<code>GET</code></li>\n<li>返回数据格式:<code>json</code></li>\n</ul>\n<h4>参数说明</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>appid</td>\n<td>应用id</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>时间戳</td>\n<td>Long</td>\n<td>是</td>\n</tr>\n<tr>\n<td>sign</td>\n<td>签名，签名校验方式见签名算法</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>code</td>\n<td>授权流程中获得的临时授权码</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>clientId</td>\n<td>子应用唯一标识，在开放平台提交子应用审核通过后获得</td>\n<td>String</td>\n<td>如果不存在子应用，则不需要</td>\n</tr>\n</tbody>\n</table>\n<h4>请求示例</h4>\n<pre><code>https://xxxxxxx/api/v1/oauth2/access_token?appid=APPID&amp;timestamp=TIMESTAMP&amp;sign=SIGN&amp;code=CODE&amp;clientId=CLIENT_ID\n</code></pre>\n<h4>返回数据</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>返回码，成功code是200，失败是除成功200以外的值</td>\n<td>int</td>\n<td>是</td>\n</tr>\n<tr>\n<td>msg</td>\n<td>提示信息，成功是ok，失败是具体的错误提示</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>result</td>\n<td>返回数据，包含accessToken,openId,expireIn,refreshToken</td>\n<td>Object</td>\n<td>是</td>\n</tr>\n<tr>\n<td>accessToken</td>\n<td>授权流程返回的accessToken</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>openId</td>\n<td>登陆用户的openId</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>expireInMs</td>\n<td>accessToken的过期时间，单位毫秒</td>\n<td>Long</td>\n<td>是</td>\n</tr>\n<tr>\n<td>refreshToken</td>\n<td>accessToken过期后重新获取accessToken用(可以不实现刷新，具体看app方决定）</td>\n<td>String</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p>示例</p>\n<pre><code class=\"language-json\">{\n    \"code\":\"200\",\n    \"msg\":\"ok\",\n    \"result\":{\n        \"accessToken\":\"er8i9ryu283ifikfrjifiu\",\n        \"openId\":\"deofi3ihjukfeiewfeofkj==\",\n        \"expireInMs\":6000000, // 单位秒\n        \"refreshToken\":\"de92378483ufh438yruhjf\"\n    }\n}\n</code></pre>\n<p>注意：用于区分用户的 <code>openId</code> 并不是 <code>userId</code> ，请不要针对此使用。相见混淆 <code>userId</code> 章节。</p>\n<h3>5、通过Token获取用户信息</h3>\n<p><code>/api/v1/oauth2/user/info</code></p>\n<ul>\n<li>提供方:AppServer</li>\n<li>调用方:GameCenterServer</li>\n<li>请求方式:<code>GET</code></li>\n<li>请求参数格式:<code>url parameter</code></li>\n<li>返回数据格式:<code>json</code></li>\n</ul>\n<h5>参数说明</h5>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>appid</td>\n<td>应用id</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>时间戳</td>\n<td>Long</td>\n<td>是</td>\n</tr>\n<tr>\n<td>sign</td>\n<td>签名，签名校验方式见签名算法</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>accessToken</td>\n<td>code换取到的accessToken</td>\n<td>String</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<h4>请求示例</h4>\n<pre><code>https://xxxxxxx/api/v1/oauth2/user/info?appid=APPID&amp;timestamp=TIMESTAMP&amp;sign=SIGN&amp;accessToken=TOKEN\n</code></pre>\n<h4>数据说明</h4>\n<p>注意：根据渠道的用户模型来定义</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型(字符长度)</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>返回码，成功code是200，失败是除成功200以外的值</td>\n<td>int</td>\n<td>是</td>\n</tr>\n<tr>\n<td>msg</td>\n<td>提示信息，成功是ok，失败是具体的错误提示</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>result</td>\n<td>返回数据，包含accessToken,openId,expireIn,refreshToken</td>\n<td>Object</td>\n<td>是</td>\n</tr>\n<tr>\n<td>openId</td>\n<td>授权流程中的openId,同一个oauthAppId下是相同的</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>nickname</td>\n<td>用户昵称</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>avatarUrl</td>\n<td>头像</td>\n<td>String</td>\n<td>是</td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>手机号码，如有请提供，方便运营联系用户处理问题</td>\n<td>String</td>\n<td>否</td>\n</tr>\n<tr>\n<td>gender</td>\n<td>性别,未知0，男1，女2，如有请提供，方便做精细化运营</td>\n<td>Integer</td>\n<td>否</td>\n</tr>\n<tr>\n<td>age</td>\n<td>年龄，如有请提供，方便做精细化运营</td>\n<td>Integer</td>\n<td>否</td>\n</tr>\n<tr>\n<td>region</td>\n<td>地区,包含省市，如有请提供，方便做精细化运营</td>\n<td>String</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<p>示例</p>\n<pre><code>{\n    &quot;code&quot;:&quot;200&quot;,\n    &quot;msg&quot;:&quot;ok&quot;,\n    &quot;result&quot;:{\n        &quot;openId&quot;:&quot;deofi3ihjukfeiewfeofkj==&quot;,\n        &quot;mobile&quot;:&quot;13812345678&quot;,\n        &quot;nickname&quot;:&quot;昵称&quot;,\n        &quot;avatarUrl&quot;:&quot;http://一个头像图片.png&quot;,\n        &quot;gender&quot;:1,\n        &quot;age&quot;:28,\n        &quot;region&quot;:&quot;浙江省杭州市&quot;\n    }\n}\n</code></pre>\n<h3>客户端接入Webview</h3>\n<ul>\n<li>接入链接:<a href=\"http://open.game.163.com/dp-sdk/webview\">http://open.game.163.com/dp-sdk/webview</a></li>\n<li>提供方:GameCenterServer</li>\n<li>调用者:App</li>\n<li>注意事项:如App是登陆状态，任何进入游戏中心的入口，包括此入口和以后可能跳转的其他入口，都需要在链接上拼接<code>code</code>，如<code>http://open.game.163.com/dp-sdk/webview?code=deiudei928398</code></li>\n</ul>\n<h3>附录</h3>\n<h4>生成和验证签名</h4>\n<p>把得到的参数添加到Map中，示例：</p>\n<pre><code>long timestamp = System.currentTimeMillis();\nMap&lt;String, String&gt; params = new HashMap&lt;&gt;();\nparams.put(&quot;accessToken&quot;, accessToken);\nparams.put(&quot;timestamp&quot;,String.valueOf(timestamp));\nparams.put(&quot;appid&quot;, appId);\nString sign = genSign(params, appSecret);\n//使用计算得到的signature与参数中的signature进行相等比较\n</code></pre>\n<p>生成签名方法，示例：</p>\n<pre><code>/**\n * 生成签名信息\n * \n * @param secretKey 游戏中心在渠道的appSecret\n *            \n * @param params\n *            接口请求参数名和参数值map，不包括signature参数名\n * @return\n */\npublic static String genSign(Map&lt;String, String&gt; paramsMap, String keySecret) {\n\t\tTreeMap&lt;String, String&gt; params = genAllParams(paramsMap);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tsb.append(keySecret);\n\t\tfor (Map.Entry&lt;String, String&gt; entry : params.entrySet()) {\n\t\t\tsb.append(entry.getValue());\n\t\t}\n\t\treturn DigestUtils.sha1Hex(sb.toString());\n\t}\n\n\tprivate static TreeMap&lt;String, String&gt; genAllParams(Map&lt;String, String&gt; paramsMap) {\n\t\tTreeMap&lt;String, String&gt; params = new TreeMap&lt;&gt;();\n\t\tfor (String key : paramsMap.keySet()) {\n\t\t\tString value = paramsMap.get(key);\n\t\t\tparams.put(key, value);\n\t\t}\n\t\treturn params;\n\t}\n</code></pre>\n"
}