{
  "filename": "ios_sdk.md",
  "__html": "<h1>1. iOS SDK 使用文档</h1>\n<h2>SDK下载</h2>\n<p><a href=\"http://nosdn-yx.127.net/yxgame/45231f6dc7494f0cb46871dfa37c78c3.zip\">NCGSDK-1.0.1</a></p>\n<h2>1.1. pod 依赖库</h2>\n<pre><code>platform :ios, '9.0'\nuse_frameworks!\npod 'YYModel',              '= 1.0.4'\npod 'SDWebImage',           '= 4.4.2'\npod 'SDWebImage/GIF',       '= 4.4.2'\npod 'SDWebImage/WebP',      '= 4.4.2'\npod 'FLAnimatedImage',      '= 1.0.12'\npod 'Toast',                '= 4.0.0'\npod 'KVOController',        '= 1.2.0'\npod 'SVProgressHUD',        '= 2.2.5'\npod 'Reachability',         '= 3.2'\npod 'Masonry',              '= 1.1.0'\npod 'NELivePlayer',         '=1.9.1'\npod 'WebViewJavascriptBridge', '= 6.0.3'\npod 'Fabric',               '= 1.7.12'\n</code></pre>\n<h2>1.2. 导入 SDK</h2>\n<p>将下载包里面 NEGCSDK.h, libNEGCSDK_all.a 以及含图片资源和JS文件的NEGCBundle.bundle添加到 App 项目中</p>\n<h2>1.3. 启用 API</h2>\n<p>在 *AppDelegate.m application:didFinishLaunchingWithOptions 方法中调用如下方法，参数依次为 app key，版本和来源渠道。</p>\n<pre><code>NSString *NEGCSDKClientId = @&quot;mslNbTGLKdEsvZGpgZnk2XKZa1LzwoG9PeW9Qalxoj2YYYdvhawjztKs0EN5Vr1W&quot;;\nNSString *NEGCSDKAppId = @&quot;8a49e80a63d969580163f2be2235013a&quot;;\nNSString *NEGCSDKChannelHubbleId = @&quot;MA-84A2-97524E679B46&quot;;\n\n[[NEGCSDK sharedSDK] registerClientId:NEGCSDKClientId channelAppId:NEGCSDKAppId channelHubbleId:NEGCSDKChannelHubbleId homeUrlString:NULL];\n</code></pre>\n<p>在带有包含navigationbar的viewController中调用如下方法，启动游戏中心页面。\n*可以在Editor -&gt; Embed in -&gt; Navigation Controller，来为viewControllerj添加前置navigationbar</p>\n<pre><code>[NEGCSDK sharedSDK].delegate = self;\n[[NEGCSDK sharedSDK]startGameCenter:self.navigationController animated:YES];\n</code></pre>\n<h2>1.4 自定义图片浏览和视频播放器</h2>\n<p>SDK默认带了一套图片浏览和视频器，如果需要自定义可以实现下面的delegate方法</p>\n<pre><code>@protocol NEGCSDKDelegate &lt;NSObject&gt;\n@optional\n- (void)NEGCSDKBrowseImages:(NSArray *_Nonnull)imageInfos\ncurrentIndex:(NSInteger)currentIndex;\n- (void)NEGCSDKBrowseVidel:(NSString *_Nonnull)videoUrl\ntitle:(NSString *_Nullable)title;\n@end\n</code></pre>\n<h2>1.5 用户信息code获取</h2>\n<p>SDK需要app提供code来获取用户信息，code获取请参考服务器端的协议，请实现下面的delegate方法</p>\n<pre><code>@protocol NEGCSDKDelegate &lt;NSObject&gt;\n@required\n- (void)NEGCSDKGetCode:(void(^_Nonnull)(NSString *_Nullable codeString))handler;\n@end\n</code></pre>\n<h2>1.6 自定义webViewVC</h2>\n<p>如果需要实现自定义UI，比如左右键，title文字，修改navBar的属性等，请实现下面的delegate方法</p>\n<pre><code>@protocol NEGCSDKDelegate &lt;NSObject&gt;\n@optional\n- (void)NEGCSDKPushViewController:(UIViewController&lt;NEGCWebViewControllerProtocol&gt; *)webViewController animated:(BOOL)animated;\n@end\n\n- (void)NEGCSDKPushViewController:(UIViewController&lt;NEGCWebViewControllerProtocol&gt; *)webViewController animated:(BOOL)animated {\n    MyWebViewController * myWebVC = [[MyWebViewController alloc]init];\n    myWebVC.childVC = webViewController;\n    myWebVC.hidesBottomBarWhenPushed = YES;\n    [self.navigationController pushViewController:myWebVC animated:animated];\n}\n</code></pre>\n<p>并实现MyWebViewController</p>\n<pre><code>@interface MyWebViewController : UIViewController&lt;NEGCWebViewControllerParentProtocol&gt;\n@property (nonatomic, strong) UIViewController&lt;NEGCWebViewControllerProtocol&gt; *childVC;\n@end\n\n@implementation MyWebViewController\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    [self addChildViewController:_childVC];\n    [self.view addSubview:_childVC.view];\n    _childVC.view.frame = self.view.frame;\n    [_childVC didMoveToParentViewController:self];\n    if (@available(iOS 11.0, *)) {\n    } else {\n        #pragma clang diagnostic push\n        #pragma clang diagnostic ignored &quot;-Wdeprecated-declarations&quot;\n        self.automaticallyAdjustsScrollViewInsets = NO;\n        #pragma clang diagnostic pop\n    }\n    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:@&quot;返回&quot; style:UIBarButtonItemStylePlain target:self action:@selector(bima_backButtonPressed:)];\n}\n#pragma mark - NEGCWebViewControllerParentProtocol\n-(void)setMenuInfo:(NSDictionary *)info {\n    NSNumber *visible = [info objectForKey:@&quot;visible&quot;];\n    NSString *text = [info objectForKey:@&quot;text&quot;];\n    if(visible) {\n    if([visible boolValue]) {\n    if([text length]) {\n        self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:text style:UIBarButtonItemStylePlain target:self action:@selector(actionBtnClick:)];\n    } else {\n        self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithImage:[UIImage imageNamed:@&quot;webview_share&quot;] style:UIBarButtonItemStylePlain target:self action:@selector(actionBtnClick:)];\n    }\n    } else {\n        self.navigationItem.rightBarButtonItem = nil;\n    }\n    } else {\n        self.navigationItem.rightBarButtonItem = nil;\n    }\n}\n...\n@end\n</code></pre>\n",
  "link": "\\zh-cn\\blog\\channelgc\\ios_sdk.html",
  "meta": {}
}